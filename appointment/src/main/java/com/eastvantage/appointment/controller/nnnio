let data = {};
let currentSheet = '';
const sheetButtons = document.getElementById('sheetButtons');
const sheetTitle = document.getElementById('sheetTitle');
const sheetContent = document.getElementById('sheetContent');
const actionButtons = document.getElementById('actionButtons');
const emptyState = document.getElementById('emptyState');

window.onload = async function () {
  const res = await fetch('/api/config/all');
  data = await res.json();

  Object.keys(data).forEach(sheet => {
    const btn = document.createElement('button');
    btn.innerText = sheet;
    btn.onclick = () => selectSheet(sheet, btn);
    sheetButtons.appendChild(btn);
  });
};

function selectSheet(sheet, clickedBtn) {
  currentSheet = sheet;
  sheetTitle.innerText = sheet;
  sheetContent.innerHTML = '';
  actionButtons.style.display = 'flex';
  emptyState.style.display = 'none';

  Array.from(sheetButtons.children).forEach(btn => btn.classList.remove('active'));
  clickedBtn.classList.add('active');

  renderCards();
}

function renderCards() {
  const rows = data[currentSheet] || [];

  if (rows.length === 0) {
    sheetContent.innerHTML = '<div class="empty">No rows yet.</div>';
    return;
  }

  const headers = Object.keys(rows[0]);

  rows.forEach((row, rowIndex) => {
    const card = document.createElement('div');
    card.className = 'card';

    headers.forEach(header => {
      const field = document.createElement('div');
      field.className = 'field';

      const label = document.createElement('label');
      label.innerText = header;

      const input = document.createElement('textarea');
input.value = row[header] ?? '';
input.oninput = (e) => {
  data[currentSheet][rowIndex][header] = e.target.value;
};

      field.appendChild(label);
      field.appendChild(input);
      card.appendChild(field);
    });

    const actions = document.createElement('div');
    actions.className = 'card-actions';

    const delBtn = document.createElement('button');
    delBtn.innerText = 'Delete';
    delBtn.onclick = () => {
      data[currentSheet].splice(rowIndex, 1);
      renderCards();
    };

    actions.appendChild(delBtn);
    card.appendChild(actions);
    sheetContent.appendChild(card);
  });
}

function addRow() {
  const headers = Object.keys(data[currentSheet][0] || {});
  const newRow = {};
  headers.forEach(h => newRow[h] = '');
  data[currentSheet].push(newRow);
  renderCards();
}

function save() {
  fetch('/api/config/update-all', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  })
  .then(res => {
    if (res.ok) alert('Saved successfully!');
    else alert('Error saving!');
  });
}