let data = {};
let currentSheet = '';
let filters = {};
const sheetButtons = document.getElementById('sheetButtons');
const sheetTitle = document.getElementById('sheetTitle');
const dataTable = document.getElementById('dataTable');
const headerRow = document.getElementById('headerRow');
const tableBody = document.getElementById('tableBody');
const emptyState = document.getElementById('emptyState');
const toolbar = document.getElementById('toolbar');

window.onload = async function () {
  const res = await fetch('/api/config/all');
  data = await res.json();

  Object.keys(data).forEach(sheet => {
    const btn = document.createElement('button');
    btn.innerText = sheet;
    btn.onclick = () => selectSheet(sheet, btn);
    sheetButtons.appendChild(btn);
  });
};

function selectSheet(sheet, clickedBtn) {
  currentSheet = sheet;
  filters = {};
  sheetTitle.innerText = sheet;
  dataTable.style.display = 'table';
  emptyState.style.display = 'none';
  toolbar.classList.add('visible');

  Array.from(sheetButtons.children).forEach(btn => btn.classList.remove('active'));
  clickedBtn.classList.add('active');

  renderTable();
}

function renderTable() {
  headerRow.innerHTML = '';
  tableBody.innerHTML = '';

  const rows = data[currentSheet] || [];
  if (rows.length === 0) return;

  const headers = Object.keys(rows[0]);

  // Checkbox column
  const selectTh = document.createElement('th');
  selectTh.innerText = '';
  headerRow.appendChild(selectTh);

  headers.forEach(header => {
    const th = document.createElement('th');
    th.innerText = header;

    const icon = document.createElement('span');
    icon.className = 'filter-icon';
    icon.innerText = '🔍';
    icon.onclick = (e) => showFilterBox(e, header, th);
    th.appendChild(icon);

    headerRow.appendChild(th);
  });

  const filteredRows = rows.filter(row =>
    Object.entries(filters).every(([key, val]) =>
      (row[key] ?? '').toString().toLowerCase().includes(val)
    )
  );

  filteredRows.forEach((row, rowIndex) => {
    const tr = document.createElement('tr');

    // Checkbox
    const cbTd = document.createElement('td');
    cbTd.className = 'checkbox-col';
    const cb = document.createElement('input');
    cb.type = 'checkbox';
    cb.dataset.index = rowIndex;
    cbTd.appendChild(cb);
    tr.appendChild(cbTd);

    headers.forEach(header => {
      const td = document.createElement('td');
      const input = document.createElement('input');
      input.value = row[header] ?? '';
      input.oninput = (e) => {
        data[currentSheet][rowIndex][header] = e.target.value;
      };
      td.appendChild(input);
      tr.appendChild(td);
    });

    tableBody.appendChild(tr);
  });
}

function showFilterBox(e, header, thElement) {
  // Remove any existing filter box
  document.querySelectorAll('.filter-box').forEach(el => el.remove());

  const box = document.createElement('div');
  box.className = 'filter-box';

  const input = document.createElement('input');
  input.value = filters[header] || '';
  input.placeholder = `Filter ${header}`;
  input.oninput = () => {
    filters[header] = input.value.toLowerCase();
    renderTable();
  };

  box.appendChild(input);
  thElement.appendChild(box);

  input.focus();
  e.stopPropagation();

  document.addEventListener('click', () => box.remove(), { once: true });
}

function addRow() {
  const headers = Object.keys(data[currentSheet][0] || {});
  const newRow = {};
  headers.forEach(h => newRow[h] = '');
  data[currentSheet].push(newRow);
  renderTable();
}

function removeSelected() {
  const checkboxes = tableBody.querySelectorAll('input[type="checkbox"]:checked');
  const indexes = Array.from(checkboxes).map(cb => parseInt(cb.dataset.index));
  data[currentSheet] = data[currentSheet].filter((_, i) => !indexes.includes(i));
  renderTable();
}

function save() {
  fetch('/api/config/update-all', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  }).then(res => {
    if (res.ok) alert('Saved!');
    else alert('Save failed.');
  });
}